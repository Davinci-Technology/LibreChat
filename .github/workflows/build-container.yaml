name: Sync, Build and Deploy

on:
  # Run daily at 3am
  schedule:
    - cron: '0 10 * * *'

  # Allow manual triggering with input options
  workflow_dispatch:
    inputs:
      sync_only:
        description: 'Only sync with upstream (no build/deploy)'
        required: false
        default: 'false'
        type: boolean

  # Also run on push to main (for direct commits)
  push:
    branches: ["main"]

jobs:
  sync:
    runs-on: [self-hosted, Linux]
    # Skip this job for push events (only run on schedule or manual trigger)
    if: github.event_name != 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Setup Upstream Remote
        run: |
          if git remote | grep -q "^upstream$"; then
            echo "Upstream remote already exists, updating URL"
            git remote set-url upstream https://github.com/danny-avila/LibreChat.git
          else
            echo "Adding upstream remote"
            git remote add upstream https://github.com/danny-avila/LibreChat.git
          fi
          git fetch upstream

      - name: Merge Upstream Changes
        run: |
          git checkout main
          git merge upstream/main

          # Auto-resolve workflow conflicts by keeping your version
          find .github/workflows -name "*.yml" -not -name "build-container.yaml" -exec git rm {} \;
          git add .github/workflows/
    
          # Complete the merge
          git commit -m "Merge upstream, remove conflicting workflows"

      - name: Push Changes
        run: |
          git push origin main

  build:
    runs-on: [self-hosted, Linux]
    # Run after sync for schedule/manual events (unless sync_only=true), or directly for push events
    needs: [sync]
    if: always() && (needs.sync.result == 'success' || github.event_name == 'push') && (github.event.inputs.sync_only != 'true')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Ensure we get the latest code including any changes from the sync job
          ref: main

      - name: Dockerize
        run: |
          docker build -t librechat:davinci .
          docker tag librechat:davinci registry.davincitech.ca/librechat:davinci
          docker push registry.davincitech.ca/librechat:davinci

      - name: Deploy
        run: |
          export KUBECONFIG=$HOME/.kube/config.davinci
          kubectl -n librechat rollout restart deployment/librechat-prd-librechat
